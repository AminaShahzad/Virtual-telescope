import 'package:flutter/material.dart';
import 'firebase_service.dart';

class DashboardScreen extends StatefulWidget {
  const DashboardScreen({super.key});

  @override
  _DashboardScreenState createState() => _DashboardScreenState();
}

class _DashboardScreenState extends State<DashboardScreen> {
  final FirebaseService _firebaseService = FirebaseService();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text("Sensor Dashboard")),
      body: StreamBuilder<Map<String, dynamic>>(
        stream: _firebaseService.getSensorData(),
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            return Center(child: CircularProgressIndicator());
          }
          if (snapshot.hasError) {
            return Center(child: Text("Error: ${snapshot.error}"));
          }
          if (!snapshot.hasData || snapshot.data!.isEmpty) {
            return Center(child: Text("No sensor data available"));
          }

          var data = snapshot.data!;
          return SingleChildScrollView(
            child: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                SensorCard(label: "Temperature", value: "${data['temperature']}°C"),
                SensorCard(label: "Humidity", value: "${data['humidity']}%"),
                SensorCard(label: "MQ135 Gas Level", value: "${data['mq135']} ppm"),
                SensorCard(label: "PM1.0", value: "${data['pm1_0']} µg/m³"),
                SensorCard(label: "PM2.5", value: "${data['pm2_5']} µg/m³"),
                SensorCard(label: "PM10.0", value: "${data['pm10_0']} µg/m³"),
              ],
            ),
          );
        },
      ),
    );
  }
}

class SensorCard extends StatelessWidget {
  final String label;
  final String value;

  const SensorCard({required this.label, required this.value});

  @override
  Widget build(BuildContext context) {
    return Card(
      margin: EdgeInsets.all(10),
      elevation: 4,
      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),
      child: ListTile(
        title: Text(label, style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold)),
        trailing: Text(value, style: TextStyle(fontSize: 18, fontWeight: FontWeight.w500)),
      ),
    );
  }
}
